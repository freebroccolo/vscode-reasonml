{
  "private": true,
  "name": "reasonml",
  "displayName": "Reason",
  "description": "Reason language support",
  "version": "1.0.14",
  "publisher": "freebroccolo",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/freebroccolo/vscode-reasonml/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/freebroccolo/vscode-reasonml.git"
  },
  "engines": {
    "vscode": "^1.16.0"
  },
  "categories": ["Formatters", "Languages", "Linters", "Snippets"],
  "icon": "assets/logo.png",
  "activationEvents": ["onLanguage:ocaml", "onLanguage:reason"],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "reason.caseSplit",
        "title": "Reason: case split"
      },
      {
        "command": "reason.showMerlinFiles",
        "title": "Reason: show merlin files"
      },
      {
        "command": "reason.showAvailableLibraries",
        "title": "Reason: show ocamlfind libraries provided by dependencies"
      },
      {
        "command": "reason.showProjectEnv",
        "title": "Reason: show project environment."
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Reason configuration",
      "properties": {
        "reason.codelens.unicode": {
          "type": "boolean",
          "default": true,
          "description": "Enable the use of unicode symbols in codelens."
        },
        "reason.codelens.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Specifies whether the code lens is shown."
        },
        "reason.debounce.linter": {
          "type": "integer",
          "default": 500,
          "description":
            "How long to idle (in milliseconds) after keypresses before refreshing linter diagnostics. Smaller values refresh diagnostics more quickly."
        },
        "reason.diagnostics.tools": {
          "type": "array",
          "items": {
            "enum": ["merlin", "bsb"]
          },
          "default": ["merlin"],
          "maxItems": 2,
          "uniqueItems": true,
          "description":
            "Specifies which tool or tools will be used to get diagnostics. If you choose both \"merlin\" and \"bsb\", merlin will be used while editing and bsb when saving."
        },
        "reason.formatOnSave": {
          "type": "boolean",
          "default": false,
          "description": "Run refmt automatically when a document is saved."
        },
        "reason.path.bsb": {
          "type": "string",
          "default": "bsb",
          "description": "The path to the `bsb` binary."
        },
        "reason.path.ocamlfind": {
          "type": "string",
          "default": "ocamlfind",
          "description": "The path to the `ocamlfind` binary."
        },
        "reason.path.esy": {
          "type": "string",
          "default": "esy",
          "description": "The path to the `esy` binary."
        },
        "reason.path.env": {
          "type": "string",
          "default": "env",
          "description": "The path to the `env` command which prints the language server environment for debugging editor issues."
        },
        "reason.path.ocamlmerlin": {
          "type": "string",
          "default": "ocamlmerlin",
          "description": "The path to the `ocamlmerlin` binary."
        },
        "reason.path.opam": {
          "type": "string",
          "default": "opam",
          "description": "The path to the `opam` binary."
        },
        "reason.path.rebuild": {
          "type": "string",
          "default": "rebuild",
          "description": "The path to the `rebuild` binary."
        },
        "reason.path.refmt": {
          "type": "string",
          "default": "refmt",
          "description": "The path to the `refmt` binary."
        },
        "reason.path.refmterr": {
          "type": "string",
          "default": "refmterr",
          "description": "The path to the `refmterr` binary."
        },
        "reason.path.rtop": {
          "type": "string",
          "default": "rtop",
          "description": "The path to the `rtop` binary."
        },
        "reason.server.languages": {
          "type": "array",
          "items": {
            "enum": ["ocaml", "reason"]
          },
          "default": ["ocaml", "reason"],
          "maxItems": 2,
          "uniqueItems": true,
          "description":
            "The list of languages enable support for in the language server."
        }
      }
    },
    "grammars": [
      {
        "language": "ocaml",
        "scopeName": "source.ocaml",
        "path": "./syntaxes/ocaml.json"
      },
      {
        "language": "ocaml.hover.info",
        "scopeName": "source.ocaml.hover.info",
        "path": "./syntaxes/ocaml-hover-info.json"
      },
      {
        "language": "ocaml.hover.type",
        "scopeName": "source.ocaml.hover.type",
        "path": "./syntaxes/ocaml-hover-type.json"
      },
      {
        "language": "ocaml.merlin",
        "scopeName": "source.ocaml.merlin",
        "path": "./syntaxes/merlin.json"
      },
      {
        "language": "ocaml.ocamlbuild",
        "scopeName": "source.ocaml.ocamlbuild",
        "path": "./syntaxes/ocamlbuild.json"
      },
      {
        "language": "ocaml.opam",
        "scopeName": "source.ocaml.opam",
        "path": "./syntaxes/opam.json"
      },
      {
        "language": "reason",
        "scopeName": "source.reason",
        "path": "./syntaxes/reason.json"
      },
      {
        "language": "reason.hover.info",
        "scopeName": "source.reason.hover.info",
        "path": "./syntaxes/reason-hover-info.json"
      },
      {
        "language": "reason.hover.signature",
        "scopeName": "source.reason.hover.signature",
        "path": "./syntaxes/reason-hover-signature.json"
      },
      {
        "language": "reason.hover.type",
        "scopeName": "source.reason.hover.type",
        "path": "./syntaxes/reason-hover-type.json"
      }
    ],
    "languages": [
      {
        "id": "ocaml",
        "aliases": ["OCaml"],
        "extensions": [".ml", ".mli"],
        "configuration": "./ocaml.configuration.json"
      },
      {
        "id": "ocaml.hover.info"
      },
      {
        "id": "ocaml.hover.type"
      },
      {
        "id": "ocaml.merlin",
        "aliases": ["Merlin"],
        "extensions": ["merlin"]
      },
      {
        "id": "ocaml.ocamlbuild",
        "aliases": ["OCamlbuild"],
        "extensions": ["_tags"]
      },
      {
        "id": "ocaml.opam",
        "aliases": ["OPAM"],
        "extensions": ["opam"]
      },
      {
        "id": "reason",
        "aliases": ["Reason"],
        "extensions": [".re", ".rei"],
        "configuration": "./reason.configuration.json"
      },
      {
        "id": "reason.hover.info"
      },
      {
        "id": "reason.hover.signature"
      },
      {
        "id": "reason.hover.type"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "reason.caseSplit",
          "group": "reason",
          "when": "editorTextFocus && resourceLangId == reason"
        }
      ]
    },
    "snippets": [
      {
        "language": "reason",
        "path": "./snippets/reason.json"
      }
    ],
    "problemMatchers": [
      {
        "name": "ocamlc",
        "owner": "ocaml",
        "fileLocation": "relative",
        "pattern": [
          {
            "regexp":
              "^File \"(.*)\", line (\\d+)(?:, characters (\\d+)-(\\d+))?:$",
            "file": 1,
            "line": 2,
            "column": 3,
            "endColumn": 4
          },
          {
            "regexp":
              "^(?:(?:Parse\\s+)?(Warning|[Ee]rror)(?:\\s+\\d+)?:)?\\s+(.*)$",
            "severity": 1,
            "message": 2,
            "loop": true
          }
        ]
      }
    ]
  },
  "scripts": {
    "build": "npm run lint && tsc -p ./ && node script/syntax.js",
    "format": "./node_modules/.bin/prettier --write \"src/**/*.ts\"",
    "lint": "tslint --project tsconfig.json",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "vscode:prepublish": "node script/syntax.js"
  },
  "devDependencies": {
    "@types/node": "8.0.53",
    "@types/pegjs": "0.10.0",
    "prettier": "1.8.2",
    "tslint": "5.8.0",
    "typescript": "2.6.1",
    "vscode": "1.1.7"
  },
  "dependencies": {
    "ocaml-language-server": "1.0.14",
    "pegjs": "0.10.0",
    "vscode-jsonrpc": "3.5.0",
    "vscode-languageclient": "3.5.0",
    "vscode-languageserver": "3.5.0",
    "vscode-languageserver-types": "3.5.0"
  },
  "extensionDependencies": ["patrys.vscode-code-outline"]
}
